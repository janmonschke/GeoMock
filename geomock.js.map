{
  "version": 3,
  "file": "geomock.js",
  "sourceRoot": "",
  "sources": [
    "geomock.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "###\n(c) 2011 Jan Monschke\nv1.0.2\nGeoMock is licensed under the MIT license.\n###\n\ndo ->\n  unless navigator? \n    window.navigator = {}\n\n  unless navigator.geolocation? \n    window.navigator.geolocation = {}\n  \n  navigator.geolocation.delay = 1000\n    \n  navigator.geolocation.shouldFail = false\n  navigator.geolocation.repeat = true\n  navigator.geolocation.failsAt = -1\n  navigator.geolocation.errorMessage = \"There was an error retrieving the position!\"\n    \n  navigator.geolocation.currentTimeout = -1\n    \n  navigator.geolocation.lastPosReturned = 0\n\n  navigator.geolocation._sanitizeLastReturned = ->\n    if @lastPosReturned > @waypoints.length-1\n      @lastPosReturned = 0\n      if @repeat == false\n        clearInterval @currentTimeout\n    \n  navigator.geolocation._geoCall = (method, success, error) ->\n    if @shouldFail and error?\n      @currentTimeout = window[method].call null, =>\n        error @errorMessage\n      , @delay\n    else\n      if success?\n        @currentTimeout = window[method].call null, =>\n          success @waypoints[@lastPosReturned++]\n          do @_sanitizeLastReturned\n        , @delay\n    \n  navigator.geolocation.getCurrentPosition = (success, error) ->\n    @_geoCall \"setTimeout\", success, error\n  \n  navigator.geolocation.watchPosition = (success, error) ->\n    @_geoCall \"setInterval\", success, error\n    @currentTimeout\n  \n  navigator.geolocation.clearWatch = (id) ->\n    clearInterval id\n  \n  navigator.geolocation.waypoints = [\n    {coords : {latitude : 52.5168, longitude : 13.3889, accuracy: 1500 }},\n    {coords : {latitude : 52.5162, longitude : 13.3890, accuracy: 1334 }},\n    {coords : {latitude : 52.5154, longitude : 13.3890, accuracy: 631  }},\n    {coords : {latitude : 52.5150, longitude : 13.3890, accuracy: 361  }},\n    {coords : {latitude : 52.5144, longitude : 13.3890, accuracy: 150  }},\n    {coords : {latitude : 52.5138, longitude : 13.3890, accuracy: 65   }},\n    {coords : {latitude : 52.5138, longitude : 13.3895, accuracy: 65   }},\n    {coords : {latitude : 52.5139, longitude : 13.3899, accuracy: 65   }},\n    {coords : {latitude : 52.5140, longitude : 13.3906, accuracy: 65   }},\n    {coords : {latitude : 52.5140, longitude : 13.3910, accuracy: 65   }}\n  ]\n"
  ]
}